// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MonitoraUFF_API.Infrastructure.Data;

#nullable disable

namespace MonitoraUFF_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250811162951_AddEventIdToRecordings")]
    partial class AddEventIdToRecordings
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MonitoraUFF_API.Core.Entities.Camera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Coordinates")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsSavingRecords")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ZoneminderInstanceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZoneminderInstanceId");

                    b.ToTable("Cameras");
                });

            modelBuilder.Entity("MonitoraUFF_API.Core.Entities.Recording", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CameraId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EventId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RecordingUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CameraId");

                    b.ToTable("Recordings");
                });

            modelBuilder.Entity("MonitoraUFF_API.Core.Entities.ZoneminderInstance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UrlServer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ZoneminderInstances");
                });

            modelBuilder.Entity("MonitoraUFF_API.Core.Entities.Camera", b =>
                {
                    b.HasOne("MonitoraUFF_API.Core.Entities.ZoneminderInstance", "ZoneminderInstance")
                        .WithMany("Cameras")
                        .HasForeignKey("ZoneminderInstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZoneminderInstance");
                });

            modelBuilder.Entity("MonitoraUFF_API.Core.Entities.Recording", b =>
                {
                    b.HasOne("MonitoraUFF_API.Core.Entities.Camera", "Camera")
                        .WithMany("Recordings")
                        .HasForeignKey("CameraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Camera");
                });

            modelBuilder.Entity("MonitoraUFF_API.Core.Entities.Camera", b =>
                {
                    b.Navigation("Recordings");
                });

            modelBuilder.Entity("MonitoraUFF_API.Core.Entities.ZoneminderInstance", b =>
                {
                    b.Navigation("Cameras");
                });
#pragma warning restore 612, 618
        }
    }
}
